@page "/"

@using MyApplication.Interfaces
@using MyApplication.Entities
@inject IRepositoryFestival FestivalRepository
@inject ICloudinaryService CloudinaryService
@inject IDialogService DialogService

<MudText Typo="Typo.h2">Suggested Festivals. Try Clicking One!</MudText>
@if (Festivals != null && Festivals.Count > 0)
{
    <MudCarousel TData="Festival" ShowArrows="true" AutoCycle="true" Class="custom-carousel" Style="height:350px; width:100%;">
        @foreach (var festival in Festivals)
        {
            <MudCarouselItem>
                <div class="d-flex justify-center align-center" style="height:100%; width:100%;">
                    <img src="@CloudinaryService.GetTransformedImageUrl(festival.PublicId!, 2000, 350)"
                         style="width:100%; height:100%; object-fit:contain; cursor:pointer;"
                         @onclick="() => OnImageClick(festival)" />
                </div>
            </MudCarouselItem>
        }
    </MudCarousel>
}

@code {
    List<Festival> Festivals { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Festivals = (await FestivalRepository.GetAllAsync())
            .Where(f => !string.IsNullOrEmpty(f.PublicId))
            .ToList();
    }

    async Task OnImageClick(Festival festival)
    {
        var parameters = new DialogParameters();
        parameters.Add("FestivalID", festival.Id); // Now passing just the ID
        await DialogService.ShowAsync<FestivalDialog>("", parameters);
    }
}